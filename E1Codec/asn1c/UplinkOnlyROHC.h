/*
 * Generated by asn1c-0.9.29 (http://lionet.info/asn1c)
 * From ASN.1 module "E1AP-IEs"
 * 	found in "E1AP-IEs.asn"
 * 	`asn1c -pdu=all -fcompound-names -findirect-choice -fno-include-deps`
 */

#ifndef	_UplinkOnlyROHC_H_
#define	_UplinkOnlyROHC_H_


#include <asn_application.h>

/* Including external dependencies */
#include <NativeInteger.h>
#include <NativeEnumerated.h>
#include <constr_SEQUENCE.h>

#ifdef __cplusplus
extern "C" {
#endif

/* Dependencies */
typedef enum UplinkOnlyROHC__continueROHC {
	UplinkOnlyROHC__continueROHC_true	= 0
	/*
	 * Enumeration is extensible
	 */
} e_UplinkOnlyROHC__continueROHC;

/* Forward declarations */
struct ProtocolExtensionContainer;

/* UplinkOnlyROHC */
typedef struct UplinkOnlyROHC {
	long	 maxCID;
	long	 rOHC_Profiles;
	long	*continueROHC;	/* OPTIONAL */
	struct ProtocolExtensionContainer	*iE_Extensions;	/* OPTIONAL */
	
	/* Context for parsing across buffer boundaries */
	asn_struct_ctx_t _asn_ctx;
} UplinkOnlyROHC_t;

/* Implementation */
/* extern asn_TYPE_descriptor_t asn_DEF_continueROHC_4;	// (Use -fall-defs-global to expose) */
extern asn_TYPE_descriptor_t asn_DEF_UplinkOnlyROHC;
extern asn_SEQUENCE_specifics_t asn_SPC_UplinkOnlyROHC_specs_1;
extern asn_TYPE_member_t asn_MBR_UplinkOnlyROHC_1[4];

#ifdef __cplusplus
}
#endif

#endif	/* _UplinkOnlyROHC_H_ */
#include <asn_internal.h>

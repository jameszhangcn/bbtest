/*
 * Generated by asn1c-0.9.29 (http://lionet.info/asn1c)
 * From ASN.1 module "E1AP-PDU-Descriptions"
 * 	found in "E1AP-PDU-Descriptions.asn"
 * 	`asn1c -pdu=all -fcompound-names -findirect-choice -fno-include-deps`
 */

#ifndef	_SuccessfulOutcome_H_
#define	_SuccessfulOutcome_H_


#include <asn_application.h>

/* Including external dependencies */
#include "ProcedureCode.h"
#include "Criticality.h"
#include <ANY.h>
#include <asn_ioc.h>
#include "Reset.h"
#include "ResetAcknowledge.h"
#include "GNB-CU-UP-E1SetupRequest.h"
#include "GNB-CU-UP-E1SetupResponse.h"
#include "GNB-CU-UP-E1SetupFailure.h"
#include "GNB-CU-CP-E1SetupRequest.h"
#include "GNB-CU-CP-E1SetupResponse.h"
#include "GNB-CU-CP-E1SetupFailure.h"
#include "GNB-CU-UP-ConfigurationUpdate.h"
#include "GNB-CU-UP-ConfigurationUpdateAcknowledge.h"
#include "GNB-CU-UP-ConfigurationUpdateFailure.h"
#include "GNB-CU-CP-ConfigurationUpdate.h"
#include "GNB-CU-CP-ConfigurationUpdateAcknowledge.h"
#include "GNB-CU-CP-ConfigurationUpdateFailure.h"
#include "E1ReleaseRequest.h"
#include "E1ReleaseResponse.h"
#include "BearerContextSetupRequest.h"
#include "BearerContextSetupResponse.h"
#include "BearerContextSetupFailure.h"
#include "BearerContextModificationRequest.h"
#include "BearerContextModificationResponse.h"
#include "BearerContextModificationFailure.h"
#include "BearerContextModificationRequired.h"
#include "BearerContextModificationConfirm.h"
#include "BearerContextReleaseCommand.h"
#include "BearerContextReleaseComplete.h"
#include "ErrorIndication.h"
#include "BearerContextReleaseRequest.h"
#include "BearerContextInactivityNotification.h"
#include "DLDataNotification.h"
#include "ULDataNotification.h"
#include "DataUsageReport.h"
#include "GNB-CU-UP-CounterCheckRequest.h"
#include "GNB-CU-UP-StatusIndication.h"
#include "MRDC-DataUsageReport.h"
#include "PrivateMessage.h"
#include <OPEN_TYPE.h>
#include <constr_CHOICE.h>
#include <constr_SEQUENCE.h>

#ifdef __cplusplus
extern "C" {
#endif

/* Dependencies */
typedef enum SuccessfulOutcome__value_PR {
	SuccessfulOutcome__value_PR_NOTHING,	/* No components present */
	SuccessfulOutcome__value_PR_ResetAcknowledge,
	SuccessfulOutcome__value_PR_GNB_CU_UP_E1SetupResponse,
	SuccessfulOutcome__value_PR_GNB_CU_CP_E1SetupResponse,
	SuccessfulOutcome__value_PR_GNB_CU_UP_ConfigurationUpdateAcknowledge,
	SuccessfulOutcome__value_PR_GNB_CU_CP_ConfigurationUpdateAcknowledge,
	SuccessfulOutcome__value_PR_E1ReleaseResponse,
	SuccessfulOutcome__value_PR_BearerContextSetupResponse,
	SuccessfulOutcome__value_PR_BearerContextModificationResponse,
	SuccessfulOutcome__value_PR_BearerContextModificationConfirm,
	SuccessfulOutcome__value_PR_BearerContextReleaseComplete
} SuccessfulOutcome__value_PR;

/* SuccessfulOutcome */
typedef struct SuccessfulOutcome {
	ProcedureCode_t	 procedureCode;
	Criticality_t	 criticality;
	struct SuccessfulOutcome__value {
		SuccessfulOutcome__value_PR present;
		union SuccessfulOutcome__value_u {
			ResetAcknowledge_t	 ResetAcknowledge;
			GNB_CU_UP_E1SetupResponse_t	 GNB_CU_UP_E1SetupResponse;
			GNB_CU_CP_E1SetupResponse_t	 GNB_CU_CP_E1SetupResponse;
			GNB_CU_UP_ConfigurationUpdateAcknowledge_t	 GNB_CU_UP_ConfigurationUpdateAcknowledge;
			GNB_CU_CP_ConfigurationUpdateAcknowledge_t	 GNB_CU_CP_ConfigurationUpdateAcknowledge;
			E1ReleaseResponse_t	 E1ReleaseResponse;
			BearerContextSetupResponse_t	 BearerContextSetupResponse;
			BearerContextModificationResponse_t	 BearerContextModificationResponse;
			BearerContextModificationConfirm_t	 BearerContextModificationConfirm;
			BearerContextReleaseComplete_t	 BearerContextReleaseComplete;
		} choice;
		
		/* Context for parsing across buffer boundaries */
		asn_struct_ctx_t _asn_ctx;
	} value;
	
	/* Context for parsing across buffer boundaries */
	asn_struct_ctx_t _asn_ctx;
} SuccessfulOutcome_t;

/* Implementation */
extern asn_TYPE_descriptor_t asn_DEF_SuccessfulOutcome;
extern asn_SEQUENCE_specifics_t asn_SPC_SuccessfulOutcome_specs_1;
extern asn_TYPE_member_t asn_MBR_SuccessfulOutcome_1[3];

#ifdef __cplusplus
}
#endif

#endif	/* _SuccessfulOutcome_H_ */
#include <asn_internal.h>

apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{.Values.componentSpec.deployment.container.image}}
spec:
  selector:
    matchLabels:
      app: {{.Values.componentSpec.deployment.container.image}} # has to match .spec.template.metadata.labels
  serviceName: {{.Values.componentSpec.deployment.container.image}}
  replicas: 1 # by default is 1
  template:
    metadata:
      labels:
        app: {{.Values.componentSpec.deployment.container.image}} # has to match .spec.selector.matchLabels
    spec:
      terminationGracePeriodSeconds: 10
      containers:
      - name: {{.Values.componentSpec.deployment.container.service}}
        {{- if and (.Values.global) (.Values.global.hub) (.Values.global.tag) }}
        image: {{ .Values.global.hub }}/{{.Values.componentSpec.deployment.container.image}}:{{.Values.global.tag}}
        {{- else }}
        image: {{ .Values.global.hub }}/{{.Values.componentSpec.deployment.container.image}}:{{.Values.componentSpec.deployment.container.tag}}
        {{- end }}
        ports:
        - containerPort: 8765
          name: {{.Values.componentSpec.deployment.container.service}}
        command: ["./simuctl"]
        volumeMounts:
                - mountPath: /opt/conf/
                  name: job-config
        resources:
          limits:
              cpu: {{ .Values.componentSpec.deployment.container.resources.limits.cpu }}
              memory: {{ .Values.componentSpec.deployment.container.resources.limits.memory }}
          requests:
              cpu: {{ .Values.componentSpec.deployment.container.resources.requests.cpu }}
              memory: {{ .Values.componentSpec.deployment.container.resources.requests.memory }}
      volumes:
              - configMap:
                    items:
                            - key: jobs.json
                              path: jobs.json
                    name: bbtest-job-config
                name: job-config
